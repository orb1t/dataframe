buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
  }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

// call the bintray target to publish to bintray
defaultTasks 'clean', 'build', 'publish'


group = 'coyote'
version = '1.0.3'


ext {
	bintray_package = 'DataFrame'
}

jar {
    manifest {
        attributes 'Provider': 'Coyote Systems', 
        'Implementation-Version': version
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}


task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}


// add javadoc/source jar tasks as artifacts
artifacts {
	archives sourcesJar, javadocJar
}


repositories {
    jcenter()
}


dependencies {
	// Unit testing, of course
	testCompile 'junit:junit:4.12'
}


publishing {
	publications {
		mavenJava(MavenPublication) {
			if (plugins.hasPlugin('war')) {
				from components.web
			} else {
				from components.java
			}

			artifact sourcesJar {
				classifier "sources"
			}

			artifact javadocJar {
				classifier "javadoc"
			}
		}
	}
	repositories {
		mavenLocal()
	}
}

jacocoTestReport {
   	reports {
       	xml.enabled = true
        html.enabled = true
   	}
}
check.dependsOn jacocoTestReport


bintray {
	user = bintrayUser
	key = bintrayKey
	publications = ['mavenJava']
	pkg {
		repo = 'maven'
		name = 'DataFrame'
		desc = 'A toolkit for Data Transfer Object (DTO) / Value Object (VO), and protocol buffer design pattern implementations'
		licenses = ['MIT']
		labels = ['Java', 'DTO', 'VO', 'ProtoBuf']
	}
}

